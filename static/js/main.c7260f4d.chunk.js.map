{"version":3,"sources":["App.test.js","setupTests.js","../src sync /^.*$","App.js","index.js","Images/AlexaTimetable.PNG","Images/Facade.JPG","Images/RoboClean.JPG","Images/Spotify.png","Images/WitchPython.PNG","Images/WitchUnity.PNG","Images/colour scheme.PNG","logo.svg","Socials.js","ProjectGrid.js","Project.js","MoreButton.js","ProjectData.js","serviceWorker.js"],"names":["test","linkElement","getByText","render","expect","toBeInTheDocument","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","className","data","Component","ReactDOM","StrictMode","document","getElementById","serviceWorker","Socials","state","ProjectGrid","items","this","props","projects","item","key","name","project","Project","style","border","Img","variant","src","require","img","Body","Title","Subtitle","color","language","Text","description","Footer","url","available","MoreButton","backgroundColor","borderRadius","textTransform","href","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","message"],"mappings":"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","file":"static/js/main.c7260f4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport App from './App';\r\n\r\ntest('renders learn react link', () => {\r\n  const { getByText } = render(<App />);\r\n  const linkElement = getByText(/learn react/i);\r\n  expect(linkElement).toBeInTheDocument();\r\n});\r\n","// jest-dom adds custom jest matchers for asserting on DOM nodes.\r\n// allows you to do things like:\r\n// expect(element).toHaveTextContent(/react/i)\r\n// learn more: https://github.com/testing-library/jest-dom\r\nimport '@testing-library/jest-dom/extend-expect';\r\n","var map = {\n\t\".\": 45,\n\t\"./\": 45,\n\t\"./App\": 40,\n\t\"./App.css\": 53,\n\t\"./App.js\": 40,\n\t\"./App.test\": 114,\n\t\"./App.test.js\": 114,\n\t\"./Images/AlexaTimetable.PNG\": 473,\n\t\"./Images/Facade.JPG\": 474,\n\t\"./Images/RoboClean.JPG\": 475,\n\t\"./Images/Spotify.png\": 476,\n\t\"./Images/WitchPython.PNG\": 477,\n\t\"./Images/WitchUnity.PNG\": 478,\n\t\"./Images/colour scheme.PNG\": 479,\n\t\"./MoreButton\": 77,\n\t\"./MoreButton.js\": 77,\n\t\"./Project\": 76,\n\t\"./Project.js\": 76,\n\t\"./ProjectData\": 78,\n\t\"./ProjectData.js\": 78,\n\t\"./ProjectGrid\": 75,\n\t\"./ProjectGrid.js\": 75,\n\t\"./Socials\": 74,\n\t\"./Socials.js\": 74,\n\t\"./index\": 45,\n\t\"./index.css\": 113,\n\t\"./index.js\": 45,\n\t\"./logo.svg\": 480,\n\t\"./serviceWorker\": 79,\n\t\"./serviceWorker.js\": 79,\n\t\"./setupTests\": 157,\n\t\"./setupTests.js\": 157\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 201;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Socials from './Socials.js';\r\nimport ProjectGrid from './ProjectGrid.js';\r\nimport data from './ProjectData';\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends Component {\r\n  render() { \r\n    return (\r\n      <div className=\"App\">\r\n        <div> \r\n          <h1 className=\"header\">Janey Slinger Portfolio</h1>\r\n          <Socials/>\r\n        </div>\r\n        <div>\r\n        <CardColumns className=\"content\">\r\n          <ProjectGrid data={data}/>\r\n        </CardColumns> \r\n        </div>\r\n      </div>\r\n      \r\n      );\r\n  }\r\n}\r\n \r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/AlexaTimetable.d919a378.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Facade.5eb6bd87.JPG\";","module.exports = __webpack_public_path__ + \"static/media/RoboClean.01a6855b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Spotify.30221af5.png\";","module.exports = __webpack_public_path__ + \"static/media/WitchPython.e931d73e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WitchUnity.7a1ca09b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/colour scheme.b7732b49.PNG\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nclass Socials extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"Socials\">\r\n                <p className=\"social\">janeyslinger@gmail.com</p>\r\n                <p className=\"social\">Twitter</p>\r\n                <p className=\"social\">Linkedin</p>\r\n                <p className=\"social\">Github</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Socials;","import React, {Component} from 'react';\r\nimport Project from './Project.js';\r\n\r\nclass ProjectGrid extends Component {    \r\n    render() { \r\n        let items = this.props.data.projects\r\n        return (  \r\n            <div>\r\n                {items.map(item => <Project key={item.name} project={item}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProjectGrid;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport './App.css';\r\nimport MoreButton from './MoreButton';\r\n\r\nfunction Project(props) {\r\n    return ( \r\n        <Card style={{border: '2px solid #BAB2B5'}}>\r\n            <Card.Img variant=\"top\" src={require(\"\" + props.project.img)}/>\r\n            <Card.Body className=\"cardContent\"> \r\n              <Card.Title >{props.project.name}</Card.Title>\r\n              <Card.Subtitle style={{color: '#123C69'}}>{props.project.language}</Card.Subtitle>\r\n              <Card.Text>\r\n                {props.project.description}\r\n              </Card.Text>\r\n              <Card.Footer>\r\n                <MoreButton url={props.project.url} available={props.project.available}/>\r\n              </Card.Footer>\r\n            </Card.Body>\r\n          </Card>\r\n    );\r\n}\r\n \r\nexport default Project;","import Button from 'react-bootstrap/Button'\r\nimport React from 'react';\r\n\r\nfunction MoreButton(props) {\r\n    if(props.available != \"none\"){\r\n        return (\r\n            <Button style={{backgroundColor: '#AC3B61', border: '2px solid #AC3B61', color: 'white', borderRadius: '3px', textTransform: 'uppercase'}} href={props.url}>{props.available}</Button>\r\n        ); \r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MoreButton;","const data = {\r\n    \"projects\": [\r\n            {\r\n                \"name\": \"Alexa Timetable Skill\",\r\n                \"description\": \"An Alexa Skill to load an ical file (designed for University of Nottingham timetables) and provide information specialised to a university timetable format. Developed for my 3rd year dissertation.\",\r\n                \"img\": \"./Images/AlexaTimetable.PNG\",\r\n                \"available\": \"View Code\",\r\n                \"url\": \"https://github.com/JaneySlinger/Alexa-Timetable-Skill-Dissertation-Code\",\r\n                \"language\": \"Python\"\r\n            },\r\n            {\r\n                \"name\": \"Witch Game Unity\",\r\n                \"description\": \"A puzzle and item collection game about a witch gathering ingredients for a potion. Made in Unity using C#. Some models created in blender.\",\r\n                \"img\": \"./Images/WitchUnity.PNG\",\r\n                \"available\": \"View Code\",\r\n                \"url\": \"https://github.com/JaneySlinger/Witch-Game-Unity\",\r\n                \"language\": \"C#\"\r\n            },\r\n            {\r\n                \"name\": \"Witch Game Python\",\r\n                \"description\": \"A top-down game about a witch finding ingredients for her potion. Made using python arcade library.\",\r\n                \"img\": \"./Images/WitchPython.PNG\",\r\n                \"available\": \"View Code\",\r\n                \"url\": \"https://github.com/JaneySlinger/Witch_Game_01\",\r\n                \"language\": \"Python\" \r\n            },\r\n            {\r\n                \"name\": \"Spotfiy Top Tracks for the Month\",\r\n                \"description\": \"ReactJS website to load the most listened to songs on Spotify for a user in the past 4 months.\",\r\n                \"img\": \"./Images/Spotify.png\",\r\n                \"available\": \"View Code\",\r\n                \"url\": \"https://github.com/JaneySlinger/spotify-top-month-tracks\",\r\n                \"language\": \"React JS\"\r\n            },\r\n            {\r\n                \"name\": \"Arduino Media Facade\",\r\n                \"description\": \"A to-scale mock up of a pixel media facade using programmable LED strips. 2nd Year group project where I contributed the python code to control the LEDs. Code not available as private.\",\r\n                \"img\": \"./Images/Facade.JPG\",\r\n                \"available\": \"none\",\r\n                \"url\": \"\",\r\n                \"language\": \"Python\" \r\n            },\r\n            {\r\n                \"name\": \"RoboClean Internship\",\r\n                \"description\": \"An Alexa Skill to control a Neato Vacuum cleaner using custom voice commands. Developed as an internship project with the RoboClean Team at Horizon. Code not available as private.\",\r\n                \"img\": \"./Images/RoboClean.JPG\",\r\n                \"available\": \"Find out More\",\r\n                \"url\": \"https://products.wp.horizon.ac.uk/2019/11/18/my-internship-on-the-roboclean-project-jane-slinger/\",\r\n                \"language\": \"Node.js\"\r\n            }\r\n        ]\r\n};\r\nexport default data;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":""}